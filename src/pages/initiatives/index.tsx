import React from "react";
import moment from "moment";
import {Row, Col, Typography} from "antd";
import {DetailModal} from "../../components/modal";
import {Table, TableRow} from "../../components/table";
import data from "../../latest.json";
import "./style.css";
import {Link} from "react-router-dom";

const {Title, Paragraph} = Typography;

const columns = [
  {
    key: "_id",
    dataIndex: "_id",
    title: "Mongo ID",
    display: false,
  },
  {
    key: "id",
    dataIndex: "id",
    title: "ID",
    display: false,
  },
  {
    key: "scrapeID",
    dataIndex: "scrapeID",
    title: "Scrape Batch ID",
    display: false,
  },
  {
    key: "modal",
    dataIndex: "modal",
    title: "",
  },
  {
    key: "name",
    dataIndex: "name",
    title: "",
  },
  {
    key: "description",
    dataIndex: "description",
    title: "Description",
    responsive: ["sm"],
  },
  {
    key: "locations",
    dataIndex: "locations",
    title: "Locations",
    responsive: ["sm"],
  },
  {
    key: "scrapedAt",
    dataIndex: "scrapedAt",
    title: "Last Updated",
    responsive: ["lg"],
  },
  {
    key: "foundedOn",
    dataIndex: "foundedOn",
    title: "Created",
    responsive: ["lg"],
  },
  {
    key: "memberCount",
    dataIndex: "memberCount",
    title: "Members",
    responsive: ["xl"],
    sorter: (a: TableRow, b: TableRow) => a.memberCount - b.memberCount,
  },
  {
    key: "memberCountIncreaseWeekly",
    dataIndex: "memberCountIncreaseWeekly",
    title: "Weekly Growth",
    responsive: ["xxl"],
    sorter: (a: TableRow, b: TableRow) =>
      a.memberCountIncreaseWeekly - b.memberCountIncreaseWeekly,
  },
  {
    key: "postCountIncreaseDaily",
    dataIndex: "postCountIncreaseDaily",
    title: "Daily Posts",
    responsive: ["xl"],
    sorter: (a: TableRow, b: TableRow) =>
      a.postCountIncreaseDaily - b.postCountIncreaseDaily,
  },
  {
    key: "postCountIncreasMonthly",
    dataIndex: "postCountIncreaseMonthly",
    title: "Monthly Posts",
    responsive: ["xxl"],
    sorter: (a: TableRow, b: TableRow) =>
      a.postCountIncreaseMonthly - b.postCountIncreaseMonthly,
  },
];

const filter = (input: string) => {
  const MIN_LENGTH = 30;
  if (input === "Public") return undefined;
  if (input.length < MIN_LENGTH) return undefined;
  return input;
};

const shorten = (input?: string) => {
  const MAX_LENGTH = 100;
  if (!input) return "";
  if (input.length > MAX_LENGTH) return input.slice(0, MAX_LENGTH) + "...";
  return input;
};

export const InitiativeDirectory = () => (
  <>
    <Row className="normal-width" gutter={{xs: 8, sm: 16, md: 24, lg: 32}}>
      <Col>
        <Title level={1}>PPEForFree Initiative Directory</Title>
        <Paragraph>
          The table below is generated by scraping Facebook once a day. If you dont see an
          initiative, <Link to="/initiatives/submit">add it here</Link>.{" "}
          <strong>
            Please submit any and all initiatives, not just those on Facebook.
          </strong>
        </Paragraph>
      </Col>
    </Row>
    <Row gutter={{xs: 8, sm: 16, md: 24, lg: 32}}>
      <Col>
        <Table
          columns={columns.filter((col) => col.display !== false)}
          data={data.map((entry) => ({
            ...entry,
            modal: (
              <DetailModal
                id={entry.id}
                name={entry.name}
                description={entry.description}
                locations={entry.locations}
                isPublic={entry.isPublic}
                foundedOn={entry.foundedOn}
                memberCount={entry.memberCount}
                memberCountIncreaseWeekly={entry.memberCountIncreaseWeekly}
                postCountIncreaseDaily={entry.postCountIncreaseDaily}
                postCountIncreaseMonthly={entry.postCountIncreaseMonthly}
              />
            ),
            description: filter(shorten(entry.description)),
            foundedOn: moment(entry.foundedOn).format("YYYY-MM-DD"),
            scrapedAt: moment(entry.scrapedAt).fromNow(),
          }))}
        />
      </Col>
    </Row>
  </>
);
